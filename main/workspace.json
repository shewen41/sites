{
  "configuration" : { },
  "description" : "This is moniepoint core systems",
  "documentation" : {
    "decisions" : [ {
      "content" : "# 1. Record architecture decisions\n\nDate: 2022-06-27\n\n## Status\n\nAccepted\n\n## Context\n\nWe need to record the architectural decisions made on this project.\n\n## Decision\n\nWe will use Architecture Decision Records, as [described by Michael Nygard](http://thinkrelevance.com/blog/2011/11/15/documenting-architecture-decisions).\n\n## Consequences\n\nSee Michael Nygard's article, linked above. For a lightweight ADR toolset, see Nat Pryce's [adr-tools](https://github.com/npryce/adr-tools).\n",
      "date" : "2022-06-26T23:00:00Z",
      "format" : "Markdown",
      "id" : "1",
      "status" : "Accepted",
      "title" : "Record architecture decisions"
    } ],
    "sections" : [ {
      "content" : "## Moniepoint Core System architecture\n\n### Overview\nMoniepoint is a financial technology platform designed to facilitate seamless financial transactions and services. It serves as a comprehensive solution for businesses and individuals seeking efficient and reliable financial operations, including payments, fund transfers, and financial management.\n\n### Key Features\n\n**Payment Processing:**\n\nSupports various payment methods including bank transfers, card payments, and mobile money.\nReal-time transaction processing for quick and efficient payment handling.\n\n**Fund Transfers:**\n\nAllows for easy transfer of funds between accounts within Moniepoint and to external bank accounts.\nSupports both local and international transfers with competitive exchange rates and fees.\n\n**Financial Management:**\n\nProvides tools for tracking expenses, managing budgets, and monitoring financial health.\nOffers detailed transaction histories and financial reports.\n\n**Merchant Services:**\n\nEnables businesses to accept payments from customers through multiple channels.\nProvides integration with e-commerce platforms and POS systems for in-store and online transactions.\n\n\n",
      "filename" : "01-index.md",
      "format" : "Markdown",
      "order" : 1,
      "title" : ""
    }, {
      "content" : "## Embedding diagrams and images\n\nThis page showcases the ability to embed diagrams and static images in documentation.\n\n### Embedding diagrams\n\nDiagrams can be embedded using the `embed:` syntax:\n\n```markdown\n![System Landscape Diagram](embed:SystemLandscape)\n```\n\nSee also: <https://www.structurizr.com/help/documentation/diagrams>\n\n#### Example: Embedded diagram\n\n![System Landscape Diagram](embed:SystemLandscape)\n",
      "filename" : "02-embedded.md",
      "format" : "Markdown",
      "order" : 2,
      "title" : ""
    } ]
  },
  "id" : 0,
  "model" : {
    "people" : [ {
      "description" : "A typical banking customer that banks with Moniepoint",
      "id" : "1",
      "location" : "Unspecified",
      "name" : "Customer",
      "properties" : {
        "structurizr.dsl.identifier" : "customer"
      },
      "relationships" : [ {
        "description" : "Uses",
        "destinationId" : "14",
        "id" : "22",
        "properties" : {
          "structurizr.dsl.identifier" : "89a0c471-5210-49c0-a0d9-c5450901eb9c"
        },
        "sourceId" : "1",
        "tags" : "Relationship"
      } ],
      "tags" : "Element,Person"
    } ],
    "properties" : {
      "structurizr.groupSeparator" : "/"
    },
    "softwareSystems" : [ {
      "description" : "NIBBS Handles the infrastructure for payments between different banks in Nigeria.",
      "documentation" : {
        "sections" : [ {
          "content" : "# Description\n\nThe ICAD (Industry Customer Account Database) API is a restful service that allows Deposit Money Banks (DMBs) to upload their customer account details to a central repository\n\nThe ICAD API allows banks to securely upload customer details during account opening and subsequently update them when needed as mandated by the Central Bank of Nigeria to improve the efficiency and safety of electronic payments in Nigeria\n",
          "filename" : "0001-intro.md",
          "format" : "Markdown",
          "order" : 1,
          "title" : ""
        } ]
      },
      "id" : "2",
      "location" : "Unspecified",
      "name" : "NIBSS ICAD",
      "properties" : {
        "structurizr.dsl.identifier" : "nibss-icad"
      },
      "tags" : "Element,Software System,External System,ExternalSystem"
    }, {
      "description" : "Allows customer to purchase airtime, bill payment, BVN Check Service e.t.c",
      "documentation" : {
        "decisions" : [ {
          "content" : "# 1. Record architecture decisions\n\nDate: 2022-06-21\n\n## Status\n\nAccepted\n\n## Context\n\nWe need to record the architectural decisions made on this project.\n\n## Decision\n\nWe will use Architecture Decision Records, as [described by Michael Nygard](http://thinkrelevance.com/blog/2011/11/15/documenting-architecture-decisions).\n\nAnd we recommend them via our [Architecture Principles](https://madetech.github.io/architecture-handbook/principles/communicate_into_the_future.html)\n\n\n## Consequences\n\nSee Michael Nygard's article, linked above. For a lightweight ADR toolset, see Nat Pryce's [adr-tools](https://github.com/npryce/adr-tools).\n",
          "date" : "2022-06-20T23:00:00Z",
          "format" : "Markdown",
          "id" : "1",
          "status" : "Accepted",
          "title" : "Record architecture decisions"
        } ],
        "sections" : [ {
          "content" : "# Description\n\nValue Added Services System Allows customer to purchase airtime, bill payment, BVN Check Service e.t.c \n\n\n\n",
          "filename" : "0001-intro.md",
          "format" : "Markdown",
          "order" : 1,
          "title" : ""
        } ]
      },
      "group" : "Moniepoint",
      "id" : "3",
      "location" : "Unspecified",
      "name" : "Value Added Services (VAS)",
      "properties" : {
        "structurizr.dsl.identifier" : "vas",
        "Development Team" : "Core Team"
      },
      "relationships" : [ {
        "description" : "Debit and Crediting",
        "destinationId" : "5",
        "id" : "18",
        "properties" : {
          "structurizr.dsl.identifier" : "e82e8541-c3f4-4895-a658-661aa24de53f"
        },
        "sourceId" : "3",
        "tags" : "Relationship"
      } ],
      "tags" : "Element,Software System"
    }, {
      "description" : "Manages Customer Card Operation inluding issuing, spending e.t.c",
      "documentation" : {
        "decisions" : [ {
          "content" : "# 1. Record architecture decisions\n\nDate: 2022-06-21\n\n## Status\n\nAccepted\n\n## Context\n\nWe need to record the architectural decisions made on this project.\n\n## Decision\n\nWe will use Architecture Decision Records, as [described by Michael Nygard](http://thinkrelevance.com/blog/2011/11/15/documenting-architecture-decisions).\n\nAnd we recommend them via our [Architecture Principles](https://madetech.github.io/architecture-handbook/principles/communicate_into_the_future.html)\n\n\n## Consequences\n\nSee Michael Nygard's article, linked above. For a lightweight ADR toolset, see Nat Pryce's [adr-tools](https://github.com/npryce/adr-tools).\n",
          "date" : "2022-06-20T23:00:00Z",
          "format" : "Markdown",
          "id" : "1",
          "status" : "Accepted",
          "title" : "Record architecture decisions"
        } ],
        "sections" : [ {
          "content" : "# Description\n\nCard Services manages and facilitate all aspects of card issuance, maintenance e.t.c\n\n\n\n",
          "filename" : "0001-intro.md",
          "format" : "Markdown",
          "order" : 1,
          "title" : ""
        } ]
      },
      "group" : "Moniepoint",
      "id" : "4",
      "location" : "Unspecified",
      "name" : "Card Services",
      "properties" : {
        "structurizr.dsl.identifier" : "cardservices",
        "Development Team" : "Core Team"
      },
      "relationships" : [ {
        "description" : "Process Transaction",
        "destinationId" : "5",
        "id" : "19",
        "properties" : {
          "structurizr.dsl.identifier" : "5bfe03ca-6c9b-4106-afe5-484e7f2ab6e5"
        },
        "sourceId" : "4",
        "tags" : "Relationship"
      } ],
      "tags" : "Element,Software System"
    }, {
      "containers" : [ {
        "description" : "Manages key financial functions like Customer Management, Ledger, and Journal Operations functionality via a JSON/HTTPS API.",
        "documentation" : { },
        "id" : "6",
        "name" : "CBA API",
        "properties" : {
          "structurizr.dsl.identifier" : "cbaapi"
        },
        "relationships" : [ {
          "description" : "Emmit branch created and account created event",
          "destinationId" : "8",
          "id" : "23",
          "properties" : {
            "structurizr.dsl.identifier" : "20a979ac-e400-478c-93ab-e1ee54a5b103"
          },
          "sourceId" : "6",
          "tags" : "Relationship"
        }, {
          "description" : "Reads and Write",
          "destinationId" : "10",
          "id" : "27",
          "properties" : {
            "structurizr.dsl.identifier" : "a0abd6ea-0b17-4ef5-ab05-e93498435c5b"
          },
          "sourceId" : "6",
          "tags" : "Relationship"
        } ],
        "tags" : "Element,Container",
        "technology" : "Java and Springboot"
      }, {
        "description" : "Manages integration with NIBSS ICAD.",
        "documentation" : {
          "decisions" : [ {
            "content" : "# 1. Record architecture decisions\n\nDate: 2022-06-21\n\n## Status\n\nAccepted\n\n## Context\n\nWe need to record the architectural decisions made on this project.\n\n## Decision\n\nWe will use Architecture Decision Records, as [described by Michael Nygard](http://thinkrelevance.com/blog/2011/11/15/documenting-architecture-decisions).\n\n\n## Consequences\n\nSee Michael Nygard's article, linked above. For a lightweight ADR toolset, see Nat Pryce's [adr-tools](https://github.com/npryce/adr-tools).\n",
            "date" : "2022-06-20T23:00:00Z",
            "format" : "Markdown",
            "id" : "1",
            "status" : "Accepted",
            "title" : "Record architecture decisions"
          } ],
          "sections" : [ {
            "content" : "# ICAD Service Documentation\n\n## 1. Overview\n\nThe **ICAD Engine** is designed to register new customer accounts on NIBSS’s Industry Customer Account Database (ICAD) following a CBN directive for all banks to submit all customer account details to NIBSS to improve the efficiency and safety of electronic payments in Nigeria.\n\nThe service responsible for processing branch and account creation events from the Core Banking Application (CBA) and submitting the branch and account details to the ICAD system. The service ensures proper integration with the NIBSS ICAD system and manages the lifecycle of branch and account records, from creation to successful submission.\n\n- **Key Functions**:\n  - Subscription to branch and account creation events via Kafka.\n  - Enriching account data with necessary details needed for upload\n  - Asynchronous processing of branch and account uploads.\n  - Handling retries for failed or inconclusive uploads.\n  - Monitoring of branch and account upload statuses and reprocessing as necessary.\n\n## 2. Service Architecture (C4 Model Level)\n\n### System Context (C4 Level 1)\n\nAt the system level, the ICAD service interacts with:\n- **Core Banking Application (CBA)**: Publishes branch and account creation events.\n- **ICAD System**: Receives branch and account creation requests.\n- **NIBSS**: Destination for account and branch created.\n- **Kafka**: Acts as a messaging queue between CBA and ICAD service.\n\n### Container Diagram (C4 Level 2)\n\nICAD consists of the following containers:\n- **Kafka Consumer**: Consumes branch creation events.\n- **ICAD Processor**: Processes branch details and submits them to ICAD.\n- **Database**: Stores branch details, upload statuses, and retry attempts.\n- **ICAD Upload Queue**: Handles asynchronous submission and retries.\n\n\n## 3. Kafka Subscription\n\nThe ICAD service subscribes to a Kafka topic where branch creation events are published by the CBA system.\n\n- **Kafka Topic**: Configurable based on the environment (dev, staging, prod).\n- **Branch Message Format**:\n\n```json\n{\n    \"id\": 1,\n    \"code\": \"TOS\",\n    \"name\": \"Tospin Branch\",\n    \"address_line_one\": \"1, Fake Avenue\",\n    \"address_line_two\": \"Off Alien Road\",\n    \"city\": \"Guess\",\n    \"status\": 1,\n    \"created_on\": 1706794906000,\n    \"last_modified_on\": 1706794906000\n}\n```\n\n- **Account Message Format**\n\n```json\n{\n    \"nuban_account_number\": \"1234567890\",\n    \"created_on\": \"2023-09-24T12:00:00Z\",\n    \"last_modified_on\": \"2023-09-24T12:00:00Z\"\n}\n```\n\n## 4. Branch Creation Logic\n\n### Step 1: Check for Existing Branch Code\n\nThe system checks if the branch code already exists in the database. If it exists, the message is acknowledged without further processing.\n\n### Step 2: Generate ICAD Branch Code\n\nThe service generates a 9-digit ICAD branch code using the formula:\n\n- **ICAD Branch Code** = `<institution_code>` + left-padded `<branch_id>` (9 digits total).\n- Example: Given `institution_code = 50666` and `branch_id = 3`, the resulting ICAD branch code is `506660003`.\n\n### Step 3: Persist Branch Details\n\nThe branch details are stored in the database after validation:\n\n- **name** = `message.name`\n- **code** = `message.code`\n- **icad_branch_code** = `generated_icad_branch_code`\n- **city** = `message.city`\n- **upload_status** = `'PENDING'`\n- **upload_attempts** = `0`\n- **status** = `1` (Active)\n- **created_on** = `CURRENT_TIMESTAMP`\n- **last_modified_on** = `CURRENT_TIMESTAMP`\n\n### Step 4: Acknowledge Kafka Message\n\nOnce the branch details are persisted in the database, the Kafka message is acknowledged.\n\n## 5. Asynchronous Processing: Upload to ICAD\n\n### Request Composition\n\nThe ICAD service composes the branch creation request with the following field mappings:\n\n- **requestID** = `<generated_request_id>`\n- **branchCode** = `record.icad_branch_code`\n- **institutionCode** = `<configured_institution_code>`\n- **branchName** = `record.name` (truncated to 100 characters)\n- **branchLocation** = `record.city` (truncated to 200 characters)\n\n### ICAD API Submission\n\nThe composed request is sent to the ICAD system for processing, and the response is used to update the corresponding record in the database.\n\n### ICAD Response Handling\n\nThe service updates the database based on the ICAD response:\n\n- **icad_request_id** = `<generated_request_id>`\n- **icad_response_code** = the response code received from ICAD.\n- **icad_response_dump** = the stringified ICAD response.\n- **upload_attempts** = incremented by 1.\n\n## 6. Upload Statuses\n\nThe ICAD service updates the `upload_status` field according to the response received from ICAD:\n\n## ICAD Response Code Mappings\n\nThe service updates the `upload_status` field based on the response received from ICAD. Below are the ICAD response codes, their descriptions, and how the system updates the `upload_status`:\n\n| ICAD Response Code | Description                                    | Upload Status |\n|--------------------|------------------------------------------------|---------------|\n| 00                 | The function call was successful               | UPLOADED      |\n| 02                 | Partial Success                                | ERROR         |\n| 44                 | Invalid Branch Code                            | FAILED        |\n| 45                 | Invalid Branch Name                            | FAILED        |\n| 46                 | Invalid Branch Location                        | FAILED        |\n| 54                 | Invalid Request Id                             | FAILED        |\n| 55                 | Invalid Unique Customer Id                     | FAILED        |\n| 56                 | Invalid Institution Code                       | FAILED        |\n| 59                 | Invalid Account Number                         | FAILED        |\n| 60                 | Invalid Account Name                           | FAILED        |\n| 63                 | Security Violation                             | FAILED        |\n| 64                 | Invalid Account Designation                    | FAILED        |\n| 65                 | Invalid Account Status                         | FAILED        |\n| 66                 | Invalid Account Type                           | FAILED        |\n| 67                 | Invalid BVN                                    | FAILED        |\n| 68                 | Invalid Currency                               | FAILED        |\n| 69                 | Invalid RC Number                              | FAILED        |\n| 86                 | JSON Generation Exception                      | ERROR         |\n| 87                 | JSON Mapping Exception                         | ERROR         |\n| 88                 | IO Exception                                   | ERROR         |\n| 89                 | Exception                                      | ERROR         |\n| 96                 | System Malfunction                             | INCONCLUSIVE  |\n| 99                 | Request Failed                                 | FAILED        |\n| 100                | Invalid Old Account Number                     | FAILED        |\n| 101                | Invalid Phone Number                           | FAILED        |\n| 102                | Invalid TIN                                    | FAILED        |\n| 103                | Invalid PEP                                    | FAILED        |\n| 104                | Invalid Sector Code                            | FAILED        |\n| 105                | Savings or current accounts must be in local currency | FAILED        |\n\nThese mappings ensure that the service responds correctly to ICAD responses, updating the internal `upload_status` field accordingly.\n\n\n## 7. Recurring Jobs\n\n### Retry Job for Inconclusive Uploads\n\nA scheduled job retries branches and account with an inclonclusive state. The job uses a configurable `cutoff_time` to exclude records modified within the last few minutes from retry processing.\n\n### Reprocess Pending Branches\n\nAnother recurring job picks up branches with a `PENDING` upload status and retries them for processing. Both jobs use the **ICAD_BRANCH_UPLOAD_PROCESSOR** type to handle these operations.\n\n",
            "filename" : "01-service-documentation.md",
            "format" : "Markdown",
            "order" : 1,
            "title" : ""
          } ]
        },
        "id" : "7",
        "name" : "Moniepoint ICAD",
        "properties" : {
          "structurizr.dsl.identifier" : "moniepointicad"
        },
        "relationships" : [ {
          "description" : "Push Branch and Account to",
          "destinationId" : "2",
          "id" : "16",
          "properties" : {
            "structurizr.dsl.identifier" : "a86a625c-8c28-468c-8ddf-5bf61b1b38f4"
          },
          "sourceId" : "7",
          "tags" : "Relationship"
        }, {
          "description" : "Get Account Details",
          "destinationId" : "6",
          "id" : "25",
          "properties" : {
            "structurizr.dsl.identifier" : "2c69fb5e-6e1b-4c2c-be3d-e13e681e628e"
          },
          "sourceId" : "7",
          "tags" : "Relationship"
        }, {
          "description" : "Get Customer Details",
          "destinationId" : "12",
          "id" : "26",
          "properties" : {
            "structurizr.dsl.identifier" : "858852f4-bd27-4391-b656-aef9381d6461"
          },
          "sourceId" : "7",
          "tags" : "Relationship"
        } ],
        "tags" : "Element,Container",
        "technology" : "Java and Springboot"
      }, {
        "description" : "Queue",
        "documentation" : { },
        "id" : "8",
        "name" : "Kafka",
        "properties" : {
          "structurizr.dsl.identifier" : "kafka"
        },
        "relationships" : [ {
          "description" : "Consume branch created and account created event",
          "destinationId" : "7",
          "id" : "24",
          "properties" : {
            "structurizr.dsl.identifier" : "09a6c930-1907-4fb4-8fab-e2a4d4064b64"
          },
          "sourceId" : "8",
          "tags" : "Relationship"
        } ],
        "tags" : "Element,Container,queue"
      }, {
        "description" : "A Job service that manages job throttling",
        "documentation" : { },
        "id" : "9",
        "name" : "TAJS",
        "properties" : {
          "structurizr.dsl.identifier" : "tajs"
        },
        "tags" : "Element,Container",
        "technology" : "Java and Springboot"
      }, {
        "description" : "MySQL Database",
        "documentation" : { },
        "id" : "10",
        "name" : "CBA Database",
        "properties" : {
          "structurizr.dsl.identifier" : "cbadatabase"
        },
        "relationships" : [ {
          "description" : "Syncs",
          "destinationId" : "12",
          "id" : "28",
          "properties" : {
            "structurizr.dsl.identifier" : "9a114235-5859-477b-b53f-672494874879"
          },
          "sourceId" : "10",
          "tags" : "Relationship"
        }, {
          "description" : "Syncs",
          "destinationId" : "11",
          "id" : "29",
          "properties" : {
            "structurizr.dsl.identifier" : "ae6066fb-7ea2-44cd-823c-5dc4b8273eaa"
          },
          "sourceId" : "10",
          "tags" : "Relationship"
        } ],
        "tags" : "Element,Container,Database",
        "technology" : "Database"
      }, {
        "description" : "Spanner Database",
        "documentation" : { },
        "id" : "11",
        "name" : "CBA Spanner Database",
        "properties" : {
          "structurizr.dsl.identifier" : "cbaspannerdatabase"
        },
        "tags" : "Element,Container,Database",
        "technology" : "Database"
      }, {
        "description" : "Database",
        "documentation" : { },
        "id" : "12",
        "name" : "BigTable Database",
        "properties" : {
          "structurizr.dsl.identifier" : "cbabigtabledatabase"
        },
        "tags" : "Element,Container,Database"
      }, {
        "description" : "MySQL Database",
        "documentation" : { },
        "id" : "13",
        "name" : "ICAD Database",
        "properties" : {
          "structurizr.dsl.identifier" : "icaddatabase"
        },
        "tags" : "Element,Container",
        "technology" : "Database"
      } ],
      "description" : "Kuwego Core Banking System is the central foundation of MoniePoint's banking operations",
      "documentation" : {
        "decisions" : [ {
          "content" : "# 1. Record architecture decisions\n\nDate: 2022-06-21\n\n## Status\n\nAccepted\n\n## Context\n\nWe need to record the architectural decisions made on this project.\n\n## Decision\n\nWe will use Architecture Decision Records, as [described by Michael Nygard](http://thinkrelevance.com/blog/2011/11/15/documenting-architecture-decisions).\n\n\n## Consequences\n\nSee Michael Nygard's article, linked above. For a lightweight ADR toolset, see Nat Pryce's [adr-tools](https://github.com/npryce/adr-tools).\n",
          "date" : "2022-06-20T23:00:00Z",
          "format" : "Markdown",
          "id" : "1",
          "status" : "Accepted",
          "title" : "Record architecture decisions"
        }, {
          "content" : "# 2. Use the thing\n\nDate: 2023-03-22\n\n## Status\n\nProposed\n\n## Context\n\nWe should use the thing.\n\n## Decision\n\nPending\n\n## Consequences\n\nNone :)\n",
          "date" : "2023-03-21T23:00:00Z",
          "format" : "Markdown",
          "id" : "2",
          "status" : "Proposed",
          "title" : "Use the thing"
        } ],
        "sections" : [ {
          "content" : "# Description\n\n\nKuwego Core Banking System popularly called **CBA** is the central foundation of MoniePoint's banking operations. \nThis robust service handles a multitude of critical financial functions including Customer Management, Ledger Operations, \nand Journal Operation(transaction). It serves as the backbone for all banking activities, ensuring high reliability and seamless \nintegration across various business units and teams. \n\n\n\n\n",
          "filename" : "0001-intro.md",
          "format" : "Markdown",
          "order" : 1,
          "title" : ""
        }, {
          "content" : "# Usage\n\nThis is how we use this thing.\n\n\n\n",
          "filename" : "0002-guide.md",
          "format" : "Markdown",
          "order" : 2,
          "title" : ""
        } ]
      },
      "group" : "Moniepoint",
      "id" : "5",
      "location" : "Unspecified",
      "name" : "Core Banking System",
      "properties" : {
        "structurizr.dsl.identifier" : "cba",
        "Development Team" : "Core Team"
      },
      "relationships" : [ {
        "description" : "Push Branch and Account to",
        "destinationId" : "2",
        "id" : "17",
        "linkedRelationshipId" : "16",
        "sourceId" : "5"
      } ],
      "tags" : "Element,Software System"
    }, {
      "description" : "Allows customer to make international transfers",
      "documentation" : { },
      "group" : "Moniepoint",
      "id" : "14",
      "location" : "Unspecified",
      "name" : "Moniepoint FX",
      "properties" : {
        "structurizr.dsl.identifier" : "moniepointfx",
        "Development Team" : "FX Team"
      },
      "relationships" : [ {
        "description" : "Process Transaction",
        "destinationId" : "5",
        "id" : "20",
        "properties" : {
          "structurizr.dsl.identifier" : "57e5ef35-c6a0-475f-9927-f3689aab50c1"
        },
        "sourceId" : "14",
        "tags" : "Relationship"
      } ],
      "tags" : "Element,Software System,Existing System"
    }, {
      "description" : "Manages customer onboarding process",
      "documentation" : { },
      "group" : "Moniepoint",
      "id" : "15",
      "location" : "Unspecified",
      "name" : "Customer Onboarding",
      "properties" : {
        "structurizr.dsl.identifier" : "customeronboarding",
        "Development Team" : "Onboarding Team"
      },
      "relationships" : [ {
        "description" : "Create Account",
        "destinationId" : "5",
        "id" : "21",
        "properties" : {
          "structurizr.dsl.identifier" : "39ba1a96-000a-4ff5-81c6-a582df35e2d1"
        },
        "sourceId" : "15",
        "tags" : "Relationship"
      } ],
      "tags" : "Element,Software System,Existing System"
    } ]
  },
  "name" : "Moniepoint Core System",
  "properties" : {
    "structurizr.dsl" : ""
  },
  "views" : {
    "configuration" : {
      "branding" : { },
      "properties" : {
        "generatr.style.logoPath" : "site/logo.png",
        "generatr.style.faviconPath" : "site/favicon.ico",
        "c4plantuml.elementProperties" : "true",
        "generatr.svglink.target" : "_self",
        "generatr.style.colors.secondary" : "#ffffff",
        "generatr.site.exporter" : "c4",
        "generatr.style.colors.primary" : "#031335",
        "generatr.site.nestGroups" : "false",
        "generatr.site.externalTag" : "External System",
        "c4plantuml.tags" : "true",
        "generatr.markdown.flexmark.extensions" : "Abbreviation,Admonition,AnchorLink,Attributes,Autolink,Definition,Emoji,Footnotes,GfmTaskList,GitLab,MediaTags,Tables,TableOfContents,Typographic",
        "generatr.site.cdn" : "https://cdn.jsdelivr.net/npm",
        "generatr.style.customStylesheet" : "site/custom.css"
      },
      "styles" : {
        "elements" : [ {
          "color" : "#ffffff",
          "fontSize" : 22,
          "shape" : "Person",
          "tag" : "Person"
        }, {
          "shape" : "Pipe",
          "tag" : "queue"
        }, {
          "background" : "#08427b",
          "tag" : "Citizen"
        }, {
          "background" : "#999999",
          "tag" : "Bank Staff"
        }, {
          "background" : "#1168bd",
          "color" : "#ffffff",
          "tag" : "Software System"
        }, {
          "background" : "#686868",
          "tag" : "External System"
        }, {
          "background" : "#686868",
          "color" : "#ffffff",
          "tag" : "Existing System"
        }, {
          "background" : "#438dd5",
          "color" : "#ffffff",
          "tag" : "Container"
        }, {
          "shape" : "WebBrowser",
          "tag" : "Web Browser"
        }, {
          "shape" : "MobileDeviceLandscape",
          "tag" : "Mobile App"
        }, {
          "shape" : "Cylinder",
          "tag" : "Database"
        }, {
          "background" : "#85bbf0",
          "color" : "#000000",
          "tag" : "Component"
        }, {
          "opacity" : 25,
          "tag" : "Failover"
        } ]
      },
      "terminology" : { }
    },
    "containerViews" : [ {
      "animations" : [ {
        "elements" : [ "6", "7", "8" ],
        "order" : 1,
        "relationships" : [ "23", "24", "25" ]
      }, {
        "elements" : [ "12" ],
        "order" : 2,
        "relationships" : [ "26" ]
      } ],
      "automaticLayout" : {
        "applied" : false,
        "edgeSeparation" : 0,
        "implementation" : "Graphviz",
        "nodeSeparation" : 300,
        "rankDirection" : "TopBottom",
        "rankSeparation" : 300,
        "vertices" : false
      },
      "elements" : [ {
        "id" : "2",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "6",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "7",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "8",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "9",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "10",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "11",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "12",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "13",
        "x" : 0,
        "y" : 0
      } ],
      "externalSoftwareSystemBoundariesVisible" : false,
      "key" : "CBAContainers",
      "order" : 2,
      "relationships" : [ {
        "id" : "16"
      }, {
        "id" : "23"
      }, {
        "id" : "24"
      }, {
        "id" : "25"
      }, {
        "id" : "26"
      }, {
        "id" : "27"
      }, {
        "id" : "28"
      }, {
        "id" : "29"
      } ],
      "softwareSystemId" : "5"
    } ],
    "systemContextViews" : [ {
      "animations" : [ {
        "elements" : [ "5" ],
        "order" : 1
      }, {
        "elements" : [ "2" ],
        "order" : 2,
        "relationships" : [ "17" ]
      }, {
        "elements" : [ "14" ],
        "order" : 3,
        "relationships" : [ "20" ]
      }, {
        "elements" : [ "15" ],
        "order" : 4,
        "relationships" : [ "21" ]
      } ],
      "automaticLayout" : {
        "applied" : false,
        "edgeSeparation" : 0,
        "implementation" : "Graphviz",
        "nodeSeparation" : 300,
        "rankDirection" : "TopBottom",
        "rankSeparation" : 300,
        "vertices" : false
      },
      "description" : "Describes the overall context",
      "elements" : [ {
        "id" : "2",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "3",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "4",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "5",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "14",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "15",
        "x" : 0,
        "y" : 0
      } ],
      "enterpriseBoundaryVisible" : true,
      "key" : "CBASystemContext",
      "order" : 1,
      "relationships" : [ {
        "id" : "17"
      }, {
        "id" : "18"
      }, {
        "id" : "19"
      }, {
        "id" : "20"
      }, {
        "id" : "21"
      } ],
      "softwareSystemId" : "5",
      "title" : "System Context of Core Banking System"
    } ],
    "systemLandscapeViews" : [ {
      "automaticLayout" : {
        "applied" : false,
        "edgeSeparation" : 0,
        "implementation" : "Graphviz",
        "nodeSeparation" : 300,
        "rankDirection" : "TopBottom",
        "rankSeparation" : 300,
        "vertices" : false
      },
      "elements" : [ {
        "id" : "1",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "2",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "3",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "4",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "5",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "14",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "15",
        "x" : 0,
        "y" : 0
      } ],
      "enterpriseBoundaryVisible" : true,
      "key" : "SystemLandscape",
      "order" : 3,
      "relationships" : [ {
        "id" : "17"
      }, {
        "id" : "18"
      }, {
        "id" : "19"
      }, {
        "id" : "20"
      }, {
        "id" : "21"
      }, {
        "id" : "22"
      } ]
    } ]
  }
}